%% Application Data
% Creates application data common to floating point and fixed point 
% configurations.

% Copyright 2013 The MathWorks, Inc.

%% Constants which will not change during simulation or code generation
% Sample times of high and low rate controller operations
ctrlConst = struct;
ctrlConst.Ts                  = 1/25e3;
ctrlConst.TsControlLawPort    = ctrlConst.Ts;
ctrlConst.TsModeScheduler     = 1/200;
ctrlConst.TsModeSchedulerPort = ctrlConst.TsModeScheduler;

% Singal range information
ctrlConst.VoltageMax             = pmsm.VoltageMax;
ctrlConst.CurrentMax             = min(inverter.CurrentMax, pmsm.CurrentMax); 
ctrlConst.VelocityMax            = pmsm.RatedSpeed;
ctrlConst.ElectricalVelocityMax  = ctrlConst.VelocityMax * pmsm.PolePairs;

%% Configure PWM peripheral
pwm = createPwm( ctrlConst.Ts,...    % Desired period of PWM
                 processor.TsClock); % Sample time of PWM clock

%% Configure hall sensor peripheral
hall = setHallTimerAndRange(hall,...
        processor.TsClock,...                         % Sample time of timer
        [0.01 1] * ctrlConst.ElectricalVelocityMax);  % [Min Max] detectable electrical velocity magnitude

%% ADC parameters
paramAdcZeroOffsetDriverUnits = createParameter(...
    adc.ZeroOffsetDriverUnits,...
    [adc.MinDriverUnits adc.MaxDriverUnits],...
    fixdt('int16'),...
    'Raw driver unit',...
    'Offset to calibrate 0 current from ADC measurement');

paramAdcAmpsPerDriverUnit = createParameter(...
    adc.AmpsPerDriverUnit,...
    [0.8 1.2]*adc.AmpsPerDriverUnit,...
    DT_PRECISION_LO,...
    'Amps / Raw driver unit',...
    'Slope to calibrate current from ADC measurement');

%% Overcurrent parameters
paramOverCurrentLimit = createParameter(...
    ctrlConst.CurrentMax * 0.9,...
    [0 ctrlConst.CurrentMax],...
    DT_PRECISION_LO_UNSIGNED,...
    'Amps',...
    'Overcurrent threshold');

paramOverCurrentDuration = createParameter(...
    0.1,...
    [0 0.2],...
    DT_PRECISION_LO,...
    'Sec',...
    'Overcurrent duration');

%% Open loop velocity parameters
paramOpenLoopVelocityAcceleration = createParameter(...
    8,...
    [2 20],...
    DT_PRECISION_LO,...
    'Rads/sec',...
    'Linear accelation used in open loop mode');

paramOpenLoopVelocityToVoltsBias = createParameter(...
    0.5,...
    [0 5],...
    DT_PRECISION_LO,...
    'Volts/(rads/sec)',...
    'Bias to convert open loop velocity to phase voltage amplitude');

paramOpenLoopVelocityToVoltsScalar = createParameter(...
    0.01,...
    [0 3],...
    DT_PRECISION_LO,...
    'Volts/(rads/sec)',...
    'Slope to convert open loop velocity to phase voltage amplitude');

%% Velocity controller parameters
paramVelocityI = createParameter(...
     0.275,...
     [0 2],...
     DT_PRECISION_LO,...
     'Ampere/(rad/sec)',...
    'I gain parameter in Velocity Control PI Controller');

paramVelocityP = createParameter(...
    0.2814,...%/10,...
    [0 1],...
    DT_PRECISION_LO,...
    'Ampere/(rad/sec)',...
    'P gain parameter in Velocity Control PI Controller');

paramVelocityPICurrentSat = createParameter(...
    2,...
    [0 6],...
    DT_PRECISION_LO,...
    'Ampere',...
    'Maximum Current Command Output from Velocity Controller');

%% Current controller parameters
paramCurrentI = createParameter(...
     20000,...
     [0 25000],...
     DT_PRECISION_LO,...
     'Volt/Ampere',...
    'I gain parameter in Currrent Control PI Controller');

paramCurrentP = createParameter(...
    10,...
    [0 100],...
    DT_PRECISION_LO,...
    'Volt/Ampere',...
    'P gain parameter in Current Control PI Controller');

paramCurrentPIVoltageSat = createParameter(...
    0.9 * (ctrlConst.VoltageMax/2),...
    [0 (ctrlConst.VoltageMax/2)],...    
    DT_PRECISION_LO,...
    'Volt',...
    'Maximum voltage command output from current controller');


ctrlConst.VoltageMax = 500;
ctrlConst.CurrentMax = 200;
paramVelocityI.Max = 2000;
paramVelocityI.Value = 100;
paramVelocityP.Max = 2000;
paramVelocityP.Value = 20;
paramVelocityPICurrentSat.Max = 500; % previously 6
paramVelocityPICurrentSat.Value = 400; % previously 2
paramCurrentI.Max = 100000;
paramCurrentI.Value = 20000;
paramCurrentP.Max = 5000; % previously 100
paramCurrentP.Value = 1000; % previously 10
paramCurrentPIVoltageSat.Max = 650;
paramCurrentPIVoltageSat.Value = 500;
